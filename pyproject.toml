[build-system]
requires = ["setuptools>=61.0.0"]
build-backend = "setuptools.build_meta"

[project]
name = "mkdocs-autoapi"
version = "0.3.1"
description = "MkDocs plugin providing automatic API reference generation"
dependencies = [
    "mkdocs>=1.4.0",
    "mkdocstrings>=0.19.0",
]
readme = "README.md"
requires-python = ">=3.6"
authors = [
    { name = "Jacob Ayers", email = "jcayers20@gmail.com" }
]
keywords = ["mkdocs", "documentation", "api", "autoapi"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.entry-points.'mkdocs.plugins']
mkdocs-autoapi = 'mkdocs_autoapi.plugin:AutoApiPlugin'

[project.optional-dependencies]
python-legacy = ["mkdocstrings[python]>=0.19.0"]
python = ["mkdocstrings[python-legacy]>=0.19.0"]

[project.urls]
Changelog = "https://github.com/jcayers20/mkdocs-autoapi/blob/main/CHANGELOG.md"
Documentation = "https://mkdocs-autoapi.readthedocs.io/en/0.2.1/"
Repository = "https://github.com/jcayers20/mkdocs-autoapi"
Issues = "https://github.com/jcayers20/mkdocs-autoapi/issues"
License = "https://github.com/jcayers20/mkdocs-autoapi/blob/main/LICENSE"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 80
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["D", "E101", "E4", "E7", "E9", "F", "I"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Use Google docstring formatting convention
[tool.ruff.lint.pydocstyle]
convention = "google"
